// b·∫Øt s·ª± ki·ªán fetch cho m·ªói y√™u c·∫ßu
addEventListener("fetch", (event) => {
  event.respondWith(handleRequest(event.request));
});

// ƒë√¢y l√† m·∫£ng ch·ª©a token h·ª£p l·ªá
const authorizedTokens = ["token1", "token2", "token3"];

// h√†m x·ª≠ l√Ω khi b·∫Øt ƒë∆∞·ª£c s·ª± ki·ªán
async function handleRequest(request) {
  // n·∫øu request t·ªõi cloudflare workers kh√¥ng ph·∫£i ph∆∞∆°ng th·ª©c POST
  if (request.method !== "POST") {
    return new Response("Method not allowed", { status: 405 });
  }

  // l·∫•y d·ªØ li·ªáu t·ª´ key "authorization" g·ª≠i l√™n t·ª´ header shortcut
  const authorizationHeader = request.headers.get("authorization");

  // n·∫øu d·ªØ li·ªáu authorization g·ª≠i l√™n kh·ªõp v·ªõi authorizedTokens ·ªü tr√™n
  if (authorizedTokens.includes(authorizationHeader)) {
    try {
      // l·∫•y d·ªØ li·ªáu t·ª´ body
      const data = await request.json();
      // g·ª≠i th√¥ng b√°o v·ªÅ Telegram
      const note =
        data.note == "No"
          ? ""
          : `
  
  Ghi ch√∫: ${data.note}`;
      const status = await sendPhotoTelegram(
        data.thumbnail,
        `${data.dealOption}${note}
  
  Danh m·ª•c: ${data.category}
  
  Li√™n k·∫øt t·∫£i v·ªÅ: [${data.name}](${data.url})
  
  Tham gia c√πng ch√∫ng t√¥i v√† chia s·∫ª nh·ªØng ·ª©ng d·ª•ng tr√™n App Store b·∫±ng li√™n k·∫øt ph√≠a d∆∞·ªõi..
        
  üí¨ Group: [Share2Get Chat](https://t.me/Share2Get)
  üîî Channel: [Share2Get Channel](https://t.me/Share2Gets)`
      );

      // xu·∫•t ra k·∫øt qu·∫£
      return new Response(JSON.stringify(status));
    } catch (e) {
      // n·∫øu c√≥ l·ªói trong qu√° tr√¨nh g·ª≠i th√¥ng b√°o
      return new Response(
        JSON.stringify({
          ok: 3,
          error_msg: e,
        })
      );
    }
  } else {
    // n·∫øu d·ªØ li·ªáu authorization g·ª≠i l√™n kh√¥ng kh·ªõp v·ªõi authorizedTokens ·ªü tr√™n
    return new Response(
      JSON.stringify({
        ok: 401,
        error_msg: "Token invalid",
      })
    );
  }
}

// h√†m sendPhoto t·ªõi Telegram
async function sendPhotoTelegram(photo, text) {
  let chat_id = "@chatid"; // chatid c·ªßa k√™nh ho·∫∑c nh√≥m ho·∫∑c user mu·ªën nh·∫≠n tin nh·∫Øn
  let key = "bot token"; // bot token
  const response = await fetch(`https://api.telegram.org/bot${key}/sendPhoto`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      parse_mode: "Markdown",
      chat_id: chat_id,
      caption: text,
      photo: photo,
    }),
  });
  if (!response.ok) {
    return {
      ok: 0,
      error_msg: response.statusText,
    };
  } else {
    return {
      ok: 1,
    };
  }
}
